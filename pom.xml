<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.dev9</groupId>
	<artifactId>maven-site-docs-example</artifactId>

	<!-- Please use standard version numbering! http://mojo.codehaus.org/versions-maven-plugin/version-rules.html -->
	<version>1.0-SNAPSHOT</version>

	<name>maven-site-docs-example</name>
	<description>Demonstrates the use of various Maven site documentation systems.</description>

	<!-- Required by the site command for certain relative URL configuration. -->
	<url>http://www.dev9.com/</url>

	<!-- Used by the javadoc plugin to generate the comments at the bottom. -->
	<inceptionYear>2013</inceptionYear>

	<!-- Check here for your SCM http://maven.apache.org/scm/scms-overview.html -->
	<scm>
		<connection>scm:git:https://github.com/dev9com/maven-site-docs-example.git</connection>
		<developerConnection>scm:git:https://github.com/dev9com/maven-site-docs-example.git</developerConnection>
		<url>scm:git:https://github.com/dev9com/maven-site-docs-example.git</url>
	</scm>

	<!-- Used to define a minimum Maven version. Used in conjunction with plugin 
		management to lock in a more current version of the various plugins. -->
	<prerequisites>
		<maven>3.1.0</maven>
	</prerequisites>

	<!-- Generates the license info for the site report. -->
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<properties>
		<!-- Eliminates the file encoding warning. Of course, all of your files 
			should probably be UTF-8 nowadays. -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Added to show how the dependency/property report will look at properties -->
		<junit.version>4.11</junit.version>
	</properties>

	<!-- These section is used by the maven-changes-plugin as well as to generate 
		links in the report. Here's a link to supported issue management systems: 
		http://maven.apache.org/plugins/maven-changes-plugin/usage.html -->
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/dev9com/maven-site-docs-example/issues/</url>
	</issueManagement>

	<organization>
		<name>Dev9</name>
		<url>http://www.dev9.com/</url>
	</organization>

	<!-- These are used in conjunction with the SCM configuration for the change 
		log reports. -->
	<developers>
		<developer>
			<id>wiverson</id>
			<name>Will Iverson</name>
			<email>wiverson@lambda.home</email>
		</developer>
		<developer>
			<id>will-iverson</id>
			<name>William Iverson</name>
			<email>will.iverson@dev9.com</email>
		</developer>
	</developers>


	<build>
		<!-- Used to bump all of the various core plugins up to Maven current. 
			Use this in conjunction with the versions-maven-plugin to keep your Maven 
			plugins up to date. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.16</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.4.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.7</version>
				</plugin>
                <plugin>
                    <groupId>org.apache.maven</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.4</version>
                </plugin>

			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- It may be strange to configure this plugin in build, but that's where 
				the dependency config goes. This configuration adds markdown support to the 
				report generation. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.3</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>

	</build>
	<dependencies>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Excellent assertion library - much better than the JUnit defaults. -->
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert-core</artifactId>
			<version>2.0M10</version>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.1</version>
		</dependency>

	</dependencies>
	<reporting>
		<plugins>

			<!-- Basic report generation. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
			</plugin>

			<!-- Dependency version reporting. Relies on standard version numbering 
				- you should use standard version numbering too! http://mojo.codehaus.org/versions-maven-plugin/version-rules.html -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>dependency-updates-report</report>
							<report>plugin-updates-report</report>
							<report>property-updates-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- Generates a list of changes from the SCM. You will probably want 
				to restrict this somehow for real projects (e.g. by date). http://maven.apache.org/plugins/maven-changelog-plugin/usage.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changelog-plugin</artifactId>
				<version>2.2</version>
			</plugin>

			<!-- Generates a narrative list of changes from the issue management system. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.9</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>github-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- Generates the Javadoc for the report. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<linksource>true</linksource>
				</configuration>
			</plugin>

			<!-- Generates a nice HTML linked source cross-reference. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>

			<!-- Generates a list of the code marked "todo", for example //TODO. Will 
				automatically link to the maven-jxr-plugin source code. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>

			<!-- Default Cobertura code coverage report. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.6</version>
			</plugin>

		</plugins>
	</reporting>

</project>
